<launch>
    <arg name="use_camera" default="true"/>
    <arg name="use_base" default="true"/>
    <arg name="use_sim" default="false"/>
    <arg name="base" default="kobuki"/> <!-- Options: create and kobuki -->
    <arg name="world_name" default="playground"/>
    <arg name="use_safe_controller" default="true"/>
    <arg name="use_visual_slam" default="false"/>
    <arg name="use_lidar_slam" default="true"/>
    <arg name="mapping_mode" default="false"/>
    <arg name="use_2dmap" default="false"/>
    <arg name="map_file" default="$(find turtlebot2_gazebo)/maps/playground.yaml"/>
    <arg name="robot" default="myrobot2"/>  <!-- turtlebot, myrobot or myrobot2 are allowed.-->
    <arg name="high_resolution_mode" default="false"/>  <!-- Realsense camera will run with high-resolution yet slow fps mode -->
 
    <param name="use_camera" value="$(arg use_camera)"/>
    <param name="use_visual_slam" value="$(arg use_visual_slam)"/>
    <param name="use_lidar_slam" value="$(arg use_lidar_slam)"/>
    <param name="mapping_mode" value="$(arg mapping_mode)"/>
    <param name="use_sim" value="$(arg use_sim)"/>
    <param name="use_base" value="$(arg use_base)"/>

    <group unless="$(arg use_sim)">
        <arg name="height" value="720" if="$(arg high_resolution_mode)"/>
        <arg name="height" value="480" unless="$(arg high_resolution_mode)"/>
        <arg name="width" value="1280" if="$(arg high_resolution_mode)"/>
        <arg name="width" value="640" unless="$(arg high_resolution_mode)"/>
        <arg name="fps" value="15" if="$(arg high_resolution_mode)"/>
        <arg name="fps" value="30" unless="$(arg high_resolution_mode)"/>

        <!-- TODO: need to fix for actual robot-->
        <group if="$(arg use_camera)">
            <include file="$(find realsense2_camera)/launch/rs_rgbd.launch">
                <arg name="camera" value="d455"/>
                <arg name="enable_pointcloud" value="false"/>
                <arg name="color_height" value="$(arg height)"/>
                <arg name="color_width" value="$(arg width)"/>
                <arg name="color_fps" value="$(arg fps)"/>
                <arg name="infra_height" value="$(arg height)"/>
                <arg name="infra_width" value="$(arg width)"/>
                <arg name="infra_fps" value="$(arg fps)"/>
                <arg name="depth_height" value="$(arg height)"/>
                <arg name="depth_width" value="$(arg width)"/>
                <arg name="depth_fps" value="$(arg fps)"/>
            </include>
        </group>

        <!-- <group if="$(arg use_visual_slam)">
            <group if="$(arg use_camera)">
                  <include file="$(find orb_slam2_ros)/launch/orb_slam2_realsense.launch">
                      <arg name="launch_realsense" value="false"/>
                  </include>
            </group>
            <group unless="$(arg use_camera)">
                  <include file="$(find orb_slam2_ros)/launch/orb_slam2_realsense.launch"/>
            </group>
        </group> -->

        <group if="$(arg use_base)" >
            <include file="$(find turtlebot2_navigation)/launch/main_base.launch">
                <arg name="base" value="$(arg base)"/>
            </include>
        </group>
    </group>

    <!-- Gazebo -->
    <!-- During simulation, robot_state_publisher is launched in gazebo launch file. -->
    <group if="$(arg use_sim)">
        <group if="$(eval robot=='turtlebot')">
            <include file="$(find turtlebot2_gazebo)/launch/gazebo_turtlebot2.launch">
                <arg name="base" value="$(arg base)"/>
                <arg name="world_name" value="$(arg world_name)"/>
            </include>
        </group>
        <group if="$(eval robot=='myrobot')">
            <include file="$(find turtlebot2_gazebo)/launch/gazebo_myrobot.launch">
                <arg name="base" value="$(arg base)"/>
                <arg name="world_name" value="$(arg world_name)"/>
            </include>
        </group>
        <group if="$(eval robot=='myrobot2')">
            <include file="$(find turtlebot2_gazebo)/launch/gazebo_myrobot2.launch">
                <arg name="base" value="$(arg base)"/>
                <arg name="world_name" value="$(arg world_name)"/>
            </include>
        </group>

        <!-- <include file="$(find turtlebot2_gazebo)/launch/gazebo_turtlebot2_control.launch"/>-->
    </group>

    <group unless="$(arg use_sim)">
      <!-- Given the published joint states, publish tf for the robot links -->
        <group if="$(eval robot=='turtlebot')">
            <param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot2_description)/robots/kobuki_hexagons_kinect.urdf.xacro' --inorder"/>
        </group>
        <group if="$(eval robot=='myrobot')">
            <param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot2_description)/robots/kobuki_myrobot_d435_zed.urdf.xacro' --inorder"/>
        </group>
        <group if="$(eval robot=='myrobot2')">
            <param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot2_description)/robots/kobuki_myrobot2_d455_vlp16.urdf.xacro' --inorder"/>
        </group>

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
    </group>
    
    <!-- Move Base -->
    <group if="$(eval arg('use_base') or arg('use_sim'))" >
        <include file="$(find turtlebot2_navigation)/launch/move_base.launch">
            <arg name="use_safe_controller" value="$(arg use_safe_controller)"/>
            <arg name="base" value="$(arg base)"/>
            <arg name="map_file" value="$(arg map_file)" if="$(arg use_2dmap)"/>
            <arg name="map_file" value="$(find turtlebot2_gazebo)/maps/blank_map.yaml" unless="$(arg use_2dmap)"/>
            <arg name="mapping_mode" value="$(arg mapping_mode)"/>
        </include>
    </group>
    
</launch>
